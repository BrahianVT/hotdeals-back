services:
  mongodb:
    container_name: hotdeals_mongodb
    environment:
      - MONGO_INITDB_DATABASE=db
    image: mongo:8.0
    ports:
      - 27018:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb-data:/data/db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "'db.adminCommand(\"ping\")'"]
      interval: 30s
      timeout: 10s
      retries: 3
      #mem_limit: 512m
  elasticsearch:
    container_name: hotdeals_elasticsearch
    image: elasticsearch:8.14.0
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms250m -Xmx250m
      # Explicitly disable security and SSL for development/testing
      xpack.security.enabled: "false"
      xpack.security.http.ssl.enabled: "false"
      xpack.security.transport.ssl.enabled: "false"
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=1s || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s # Give Elasticsearch more time to start up
    mem_limit: 700m

  redis:
    container_name: hotdeals_redis
    image: redis:7.0
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    mem_limit: 256m

volumes:
  elasticsearch-data:
  mongodb-data:
  redis-data:

networks:
  default:
    name: hotdeals-network

# useful docker commands docker logs hotdeals_elasticsearch, docker port hotdeals_elasticsearch
# on windows localhost = http://host.docker.internal/
# docker exec -it hotdeals_mongodb mongosh  ---  show dbs, use db, show collections, db.categories.find(), db.stores.find()
# remove volume   docker volume rm hotdeals-backend_mongodb-data , docker-compose down -v